#!/usr/bin/env python
import fitsio
import esutil as eu
import argparse


def get_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--tilename', required=True)
    parser.add_argument('--output', required=True)
    parser.add_argument('--flist', required=True)

    return parser.parse_args()


def add_tilename(data, tilename):
    add_dt = [('tilename', 'S12')]

    newdata = eu.numpy_util.add_fields(data, add_dt)
    newdata['tilename'] = tilename
    return newdata


def read_flist(fname):
    flist = []
    print('reading flist:', fname)
    with open(fname) as fobj:
        for line in fobj:
            fname = line.strip()
            flist.append(fname)

    return flist


def main():
    args = get_args()

    eu.ostools.makedirs_fromfile(args.output)

    flist = read_flist(args.flist)

    print('writing to:', args.output)

    with fitsio.FITS(args.output, 'rw', clobber=True) as fits:
        for i, f in enumerate(flist):
            print('reading:', f)
            odata = fitsio.read(f)

            data = add_tilename(odata, args.tilename)

            if i == 0:
                fits.write(data, extname='model_fits')
            else:
                fits[-1].append(data)

    print('output is in:', args.output)


if __name__ == '__main__':
    main()
